0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@3.7.3
3 info using node@v7.2.1
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/ido/Documents/core/clients/core',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/ido/.npm/client-core/0.0.1/package.tgz not in flight; packing
9 verbose correctMkdir /Users/ido/.npm correctMkdir not in flight; initializing
10 info lifecycle client-core@0.0.1~prepublish: client-core@0.0.1
11 silly lifecycle client-core@0.0.1~prepublish: no script for prepublish, continuing
12 verbose tar pack [ '/Users/ido/.npm/client-core/0.0.1/package.tgz',
12 verbose tar pack   '/Users/ido/Documents/core/clients/core' ]
13 verbose tarball /Users/ido/.npm/client-core/0.0.1/package.tgz
14 verbose folder /Users/ido/Documents/core/clients/core
15 verbose addLocalTarball adding from inside cache /Users/ido/.npm/client-core/0.0.1/package.tgz
16 verbose correctMkdir /Users/ido/.npm correctMkdir not in flight; initializing
17 silly cache afterAdd client-core@0.0.1
18 verbose afterAdd /Users/ido/.npm/client-core/0.0.1/package/package.json not in flight; writing
19 verbose correctMkdir /Users/ido/.npm correctMkdir not in flight; initializing
20 verbose afterAdd /Users/ido/.npm/client-core/0.0.1/package/package.json written
21 silly publish { name: 'client-core',
21 silly publish   version: '0.0.1',
21 silly publish   description: 'frontend toolchain',
21 silly publish   main: 'index.js',
21 silly publish   dependencies: { baobab: '^2.2.0', q: '^1.4.1', react: '^15.0.2' },
21 silly publish   scripts: {},
21 silly publish   author: { name: 'ido-ofir' },
21 silly publish   license: 'ISC',
21 silly publish   readme: '# client-core\n\n### Inheritance\n\n* #### Instance inheritance\n  An app inherites from core. a plugin defined in an app will inherit from the app.\na type instance can inherit from the app or from a plugin that it is defined in.\n\n```javascript\ncore.build({\n    $_type: \'app\',\n    name: \'myApp\',\n    doStuff(){\n      alert(\'stuff is getting done\')\n    },\n    plugins: [{\n      $_type: \'plugin\',\n      name: \'myPlugin\',\n      test(){\n        alert(\'plugin test\')\n      }\n    }]\n  }, (myApp)=>{\n    var { myPlugin } = myApp.plugins;\n    myApp.doStuff();\n    myPlugin.test();\n  });\n\n  \n```\n\n* #### Type inheritance\n  A type can inherit from another type:\n  ```javascript\n  core.build({\n    $_type: \'type\',\n    name: \'component\',\n    extends: \'module\'\n  })\n  ```\n  \n### Types\n\nThe base collection of all types.\n\nImplementation should take into consideration the build digest cycle\nand source updates as well as the precedence and inharitance features.\n\n* ### Build cycle and source updates\n\n  Build of source takes place when an app bootstraps, but also when \n  a change to the source has been made and only a part of the app\n  needs to be rebuilt.  \n  this allows the app to be edited externally ( or internally ) at run time.\n  \n  The build cycle is divided into phases that allow a certain type to\n  have more flexability over the way it is being built or updated / deleted\n  from source.\n\n  The build is getting one value at a time and it checks if the value \n  is a typed object. a typed object has a `$_type` property on it, which is just \n  a string name of a type:\n  \n  ```json\n  {\n    "$_type": "boolean",\n    "value": true\n  }\n  ```\n\n  When the build reaches a typed object it grabs the type definition from \n  the app\'s internal types registery. it then inspects the type definition \n  looking for certain properties on it.  \n  these properties include:\n\n  * __recursive__ : `boolean` - should the object\'s children be recursively built automatically? \n  * __init__ : `function` - runs before the build starts for the first time.\n  use this function if you need to initialize something for your type,\n  like a namespace to store instances.\n  * __preBuild__ : `function` - recieves the source before any of the children have been built.\n  this is useful when the `recursive` flag is `true`, and you want to change the source that will\n  be passed down to the object\'s children.  \n  expected to return a new source that will be used in the rest of the build.\n  * __build__ : `function` - recieves the source after all children have been built.\n  if `recursive` is not set to `true` this function will get the original source (or \n  the source that `preBuild` has returned).\n  * __validate__ : `function` - explicitly validate an instance of this type.  \n  * __set__ : `function` - this function will be called after a typed object has\n  been built and it\'s purpose is to store the result somewhere.\n  * __schema__ : `object` - an object describing the structure that the type expects\n  it\'s source to have. the schema can be used to validate a typed object,\n  but it\'s also very useful as the blueprint for a GUI.\n    \n  ```javascript\n  {\n    "$_type": "type",\n    "name": "user",\n    "recursive": true,\n    "async": true,\n    "schema": {\n      "firstName": { \n        "type": "string",\n        "description": "The first name of the user.",\n        "isRequired": true,\n        "value": ""\n      },\n      "lastName": { \n        "type": "string",\n        "description": "The last name of the user.",\n        "isRequired": false,\n        "value": ""\n      }\n    },\n    init(){\n      this.app.users = {};\n    },\n    preBuild(source){\n      var newSource = { ...source };\n      newSource.id = core.utils.uuid();\n      return newSource;\n    },\n    build(source){\n      var name = `${source.firstName} ${source.lastName}`;\n      return { ...source, name: name }\n    },\n    set(user){\n      this.users[user.name] = user;\n    }\n  }\n  ``` \n',
21 silly publish   readmeFilename: 'README.md',
21 silly publish   _id: 'client-core@0.0.1',
21 silly publish   _shasum: '9c882bcf54627f4f5fabfab8426e69028856109c',
21 silly publish   _from: '.' }
22 verbose getPublishConfig undefined
23 silly mapToRegistry name client-core
24 silly mapToRegistry using default registry
25 silly mapToRegistry registry https://registry.npmjs.org/
26 silly mapToRegistry uri https://registry.npmjs.org/client-core
27 verbose publish registryBase https://registry.npmjs.org/
28 silly publish uploading /Users/ido/.npm/client-core/0.0.1/package.tgz
29 verbose request uri https://registry.npmjs.org/client-core
30 verbose request sending authorization for write operation
31 info attempt registry request try #1 at 5:30:58 PM
32 verbose request using bearer token for auth
33 verbose request id 9ae20a6086db45df
34 http request PUT https://registry.npmjs.org/client-core
35 http 403 https://registry.npmjs.org/client-core
36 verbose headers { 'content-type': 'application/json',
36 verbose headers   'cache-control': 'max-age=300',
36 verbose headers   'content-length': '95',
36 verbose headers   'accept-ranges': 'bytes',
36 verbose headers   date: 'Mon, 20 Mar 2017 15:28:34 GMT',
36 verbose headers   via: '1.1 varnish',
36 verbose headers   connection: 'keep-alive',
36 verbose headers   'x-served-by': 'cache-lhr6331-LHR',
36 verbose headers   'x-cache': 'MISS',
36 verbose headers   'x-cache-hits': '0',
36 verbose headers   'x-timer': 'S1490023712.883625,VS0,VE1226',
36 verbose headers   vary: 'Accept-Encoding' }
37 verbose request invalidating /Users/ido/.npm/registry.npmjs.org/client-core on PUT
38 error publish Failed PUT 403
39 verbose stack Error: "You cannot publish over the previously published version 0.0.1." : client-core
39 verbose stack     at makeError (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:264:12)
39 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:252:14)
39 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:172:14)
39 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:199:22)
39 verbose stack     at emitTwo (events.js:106:13)
39 verbose stack     at Request.emit (events.js:191:7)
39 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1036:10)
39 verbose stack     at emitOne (events.js:101:20)
39 verbose stack     at Request.emit (events.js:188:7)
39 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:963:12)
40 verbose statusCode 403
41 verbose pkgid client-core
42 verbose cwd /Users/ido/Documents/core/clients/core
43 error Darwin 15.6.0
44 error argv "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
45 error node v7.2.1
46 error npm  v3.7.3
47 error code E403
48 error "You cannot publish over the previously published version 0.0.1." : client-core
49 error If you need help, you may report this error at:
49 error     <https://github.com/npm/npm/issues>
50 verbose exit [ 1, true ]
